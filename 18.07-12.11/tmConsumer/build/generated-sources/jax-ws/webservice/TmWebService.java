
package webservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "tmWebService", targetNamespace = "http://WebService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TmWebService {


    /**
     * 
     * @param userId wird übergeben
     * @return java.util.List with webservice.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "showConversations", targetNamespace = "http://WebService/", className = "webservice.ShowConversations")
    @ResponseWrapper(localName = "showConversationsResponse", targetNamespace = "http://WebService/", className = "webservice.ShowConversationsResponse")
    @Action(input = "http://WebService/tmWebService/showConversationsRequest", output = "http://WebService/tmWebService/showConversationsResponse")
    public List<User> showConversations(
        @WebParam(name = "user_id", targetNamespace = "")
        int userId);

    /**
     * 
     * @param mobilenumber vom User angegebener Wert
     * @param sex vom User angegebener Wert
     * @param destination vom User angegebener Wert
     * @param about vom User angegebener Wert
     * @param lookingFor vom User angegebener Wert
     * @param location vom User angegebener Wert
     * @param id vom User angegebener Wert
     * @param startdate vom User angegebener Wert
     * @param interests vom User angegebener Wert
     * @param age vom User angegebener Wert
     * @return java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editProfile", targetNamespace = "http://WebService/", className = "webservice.EditProfile")
    @ResponseWrapper(localName = "editProfileResponse", targetNamespace = "http://WebService/", className = "webservice.EditProfileResponse")
    @Action(input = "http://WebService/tmWebService/editProfileRequest", output = "http://WebService/tmWebService/editProfileResponse")
    public String editProfile(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "mobilenumber", targetNamespace = "")
        String mobilenumber,
        @WebParam(name = "age", targetNamespace = "")
        int age,
        @WebParam(name = "location", targetNamespace = "")
        String location,
        @WebParam(name = "sex", targetNamespace = "")
        String sex,
        @WebParam(name = "destination", targetNamespace = "")
        String destination,
        @WebParam(name = "startdate", targetNamespace = "")
        String startdate,
        @WebParam(name = "interests", targetNamespace = "")
        String interests,
        @WebParam(name = "looking_for", targetNamespace = "")
        String lookingFor,
        @WebParam(name = "about", targetNamespace = "")
        String about);

    /**
     * 
     * @param email vom User angegebener Wert
     * @return byte[]
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEncryptedPw", targetNamespace = "http://WebService/", className = "webservice.GetEncryptedPw")
    @ResponseWrapper(localName = "getEncryptedPwResponse", targetNamespace = "http://WebService/", className = "webservice.GetEncryptedPwResponse")
    @Action(input = "http://WebService/tmWebService/getEncryptedPwRequest", output = "http://WebService/tmWebService/getEncryptedPwResponse")
    public byte[] getEncryptedPw(
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param mobilenumber vom User angegebener Wert
     * @param sex vom User angegebener Wert
     * @param destination vom User angegebener Wert
     * @param about vom User angegebener Wert
     * @param lookingFor vom User angegebener Wert
     * @param location vom User angegebener Wert
     * @param id vom User angegebener Wert
     * @param startdate vom User angegebener Wert
     * @param interests vom User angegebener Wert
     * @param age vom User angegebener Wert
     * @return java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createProfile", targetNamespace = "http://WebService/", className = "webservice.CreateProfile")
    @ResponseWrapper(localName = "createProfileResponse", targetNamespace = "http://WebService/", className = "webservice.CreateProfileResponse")
    @Action(input = "http://WebService/tmWebService/createProfileRequest", output = "http://WebService/tmWebService/createProfileResponse")
    public String createProfile(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "mobilenumber", targetNamespace = "")
        String mobilenumber,
        @WebParam(name = "age", targetNamespace = "")
        int age,
        @WebParam(name = "location", targetNamespace = "")
        String location,
        @WebParam(name = "sex", targetNamespace = "")
        String sex,
        @WebParam(name = "destination", targetNamespace = "")
        String destination,
        @WebParam(name = "startdate", targetNamespace = "")
        String startdate,
        @WebParam(name = "interests", targetNamespace = "")
        String interests,
        @WebParam(name = "looking_for", targetNamespace = "")
        String lookingFor,
        @WebParam(name = "about", targetNamespace = "")
        String about);

    /**
     * 
     * @param gender vom User angegebener Wert
     * @param destination vom User angegebener Wert
     * @return java.util.List with webservice.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findTravelmates", targetNamespace = "http://WebService/", className = "webservice.FindTravelmates")
    @ResponseWrapper(localName = "findTravelmatesResponse", targetNamespace = "http://WebService/", className = "webservice.FindTravelmatesResponse")
    @Action(input = "http://WebService/tmWebService/findTravelmatesRequest", output = "http://WebService/tmWebService/findTravelmatesResponse")
    public List<User> findTravelmates(
        @WebParam(name = "destination", targetNamespace = "")
        String destination,
        @WebParam(name = "gender", targetNamespace = "")
        String gender);

    /**
     * 
     * @param userId Id des Users
     * @return java.util.List with webservice.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "anyNewMessages", targetNamespace = "http://WebService/", className = "webservice.AnyNewMessages")
    @ResponseWrapper(localName = "anyNewMessagesResponse", targetNamespace = "http://WebService/", className = "webservice.AnyNewMessagesResponse")
    @Action(input = "http://WebService/tmWebService/anyNewMessagesRequest", output = "http://WebService/tmWebService/anyNewMessagesResponse")
    public List<User> anyNewMessages(
        @WebParam(name = "user_id", targetNamespace = "")
        int userId);

    /**
     * 
     * @param chatPartnerId Id des chatPartners
     * @param userId Id des Users
     * @return java.util.List with webservice.Message
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "showMessages", targetNamespace = "http://WebService/", className = "webservice.ShowMessages")
    @ResponseWrapper(localName = "showMessagesResponse", targetNamespace = "http://WebService/", className = "webservice.ShowMessagesResponse")
    @Action(input = "http://WebService/tmWebService/showMessagesRequest", output = "http://WebService/tmWebService/showMessagesResponse")
    public List<Message> showMessages(
        @WebParam(name = "user_id", targetNamespace = "")
        int userId,
        @WebParam(name = "chatPartnerId", targetNamespace = "")
        int chatPartnerId);

    /**
     * 
     * @param pw wird übergeben
     * @param email wird übergeben
     * @return returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://WebService/", className = "webservice.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://WebService/", className = "webservice.LoginResponse")
    @Action(input = "http://WebService/tmWebService/loginRequest", output = "http://WebService/tmWebService/loginResponse")
    public String login(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "pw", targetNamespace = "")
        String pw);

    /**
     * 
     * @param email email des Users
     * @return returns byte[]
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSalt", targetNamespace = "http://WebService/", className = "webservice.GetSalt")
    @ResponseWrapper(localName = "getSaltResponse", targetNamespace = "http://WebService/", className = "webservice.GetSaltResponse")
    @Action(input = "http://WebService/tmWebService/getSaltRequest", output = "http://WebService/tmWebService/getSaltResponse")
    public byte[] getSalt(
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param lastName vom User angegebener Wert
     * @param password vom User angegebener Wert
     * @param salt vom User angegebener Wert
     * @param name vom User angegebener Wert
     * @param nickname vom User angegebener Wert
     * @param email vom User angegebener Wert
     * @return java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "newUser", targetNamespace = "http://WebService/", className = "webservice.NewUser")
    @ResponseWrapper(localName = "newUserResponse", targetNamespace = "http://WebService/", className = "webservice.NewUserResponse")
    @Action(input = "http://WebService/tmWebService/newUserRequest", output = "http://WebService/tmWebService/newUserResponse")
    public String newUser(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "last_name", targetNamespace = "")
        String lastName,
        @WebParam(name = "nickname", targetNamespace = "")
        String nickname,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "salt", targetNamespace = "")
        byte[] salt,
        @WebParam(name = "password", targetNamespace = "")
        byte[] password);

    /**
     * 
     * @param senderId Id des Absenders
     * @param recipientId Id des Empfängers
     * @param message Nachricht
     * @return java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "storeMessage", targetNamespace = "http://WebService/", className = "webservice.StoreMessage")
    @ResponseWrapper(localName = "storeMessageResponse", targetNamespace = "http://WebService/", className = "webservice.StoreMessageResponse")
    @Action(input = "http://WebService/tmWebService/storeMessageRequest", output = "http://WebService/tmWebService/storeMessageResponse")
    public String storeMessage(
        @WebParam(name = "senderId", targetNamespace = "")
        int senderId,
        @WebParam(name = "recipientId", targetNamespace = "")
        int recipientId,
        @WebParam(name = "message", targetNamespace = "")
        String message);

}
